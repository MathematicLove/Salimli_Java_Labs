package org.example;
import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.NoSuchElementException;

public class Main {
    public static void main(String[] args) {
        BestSSet<Integer> mySet = new BestSSet<>();
        Scanner scanner = new Scanner(System.in);
        System.out.println("üí•Super Sorted Setüí•");
        while (true) {
            System.out.println("\n–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é:");
            System.out.println("1| –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç ‚ûï");
            System.out.println("2| –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç ‚ûñ");
            System.out.println("3| –ï—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –º–Ω.–≤–µ? ‚ùì");
            System.out.println("4| 1-—ã–π —ç–ª–µ–º–µ–Ω—Ç 1Ô∏è‚É£");
            System.out.println("5| –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç üîö");
            System.out.println("6| –ú–æ—â–Ω–æ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–∞ #Ô∏è‚É£");
            System.out.println("7| –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ üßπ");
            System.out.println("8| –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ üôÄ");
            System.out.println("9| –í—ã–π—Ç–∏‚ùå");

            System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: ");
            int choice;
            try {
                choice = scanner.nextInt();
            } catch (InputMismatchException e) {
                System.out.println("–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–∑ –º–µ–Ω—é!");
                scanner.nextLine();
                continue;
            }

            switch (choice) {
                case 1 -> {
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å (Int): ");
                    try {
                        int element = scanner.nextInt();
                        if (mySet.add(element)) {
                            System.out.println("–≠–ª–µ–º–µ–Ω—Ç " + element + " –¥–æ–±–∞–≤–ª–µ–Ω");
                        } else {
                            System.out.println("–≠–ª–µ–º–µ–Ω—Ç " + element + " —É–∂–µ –µ—Å—Ç—å!");
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("–û—à–∏–±–∫–∞: –¢–æ–ª—å–∫–æ Int!!!");
                        scanner.nextLine();
                    }
                }
                case 2 -> {
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ —É–¥–∞–ª–∏—Ç—å: ");
                    try {
                        int element = scanner.nextInt();
                        if (mySet.remove(element)) {
                            System.out.println("–≠–ª–µ–º–µ–Ω—Ç " + element + " —É–¥–∞–ª–µ–Ω");
                        } else {
                            System.out.println("–≠–ª–µ–º–µ–Ω—Ç–∞ " + element + "–Ω–µ—Ç—É –≤ –º–Ω.–≤–µ (");
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("–û—à–∏–±–∫–∞: –¢–æ–ª—å–∫–æ Int!!!.");
                        scanner.nextLine();
                    }
                }
                case 3 -> {
                    System.out.print("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ");
                    try {
                        int element = scanner.nextInt();
                        if (mySet.contains(element)) {
                            System.out.println("–≠–ª–µ–º–µ–Ω—Ç " + element + " –µ—Å—Ç—å!");
                        } else {
                            System.out.println("–≠–ª–µ–º–µ–Ω—Ç–∞ " + element + " –Ω–µ—Ç—É!");
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("–û—à–∏–±–∫–∞: –¢–æ–ª—å–∫–æ Int!!!");
                        scanner.nextLine();
                    }
                }
                case 4 -> {
                    try {
                        System.out.println("–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–∞: " + mySet.first());
                    } catch (NoSuchElementException e) {
                        System.out.println("–£–ø—Å, —Ç—É—Ç –ø—É—Å—Ç–æ!");
                    }
                }
                case 5 -> {
                    try {
                        System.out.println("–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–∞: " + mySet.last());
                    } catch (NoSuchElementException e) {
                        System.out.println("–£–ø—Å, —Ç—É—Ç –ø—É—Å—Ç–æ!");
                    }
                }
                case 6 -> System.out.println("–ú–æ—â–Ω–æ—Å—Ç—å –º–Ω-–≤–∞: " + mySet.size());
                case 7 -> {
                    mySet.clear();
                    System.out.println("–ü–æ—á–∏—â–µ–Ω–æ!");
                }
                case 8 -> {
                    System.out.println("–≠–ª–µ–º–µ–Ω—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤–∞:");
                    for (Integer value : mySet) {
                        System.out.println(value);
                    }
                }
                case 9 -> {
                    System.out.println("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
                    scanner.close();
                    return;
                }
                default -> System.out.println("–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –∏–∑ –º–µ–Ω—é!");
            }
        }
    }
}
